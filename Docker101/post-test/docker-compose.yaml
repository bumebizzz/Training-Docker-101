version: '3'
services:
  db_01:
    image: postgres:16.0
    build:
      context: postgres
      dockerfile: Dockerfile
    container_name: postgres1
    enviroment :
      POSTGRES_USER: postgres1
      POSTGRES_PASSWORD : postgres1
      POSTGRES_DB : postgres1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
      

  db_02:
    image: postgres:16.0
    build:
      context: postgres
      dockerfile: Dockerfile
    container_name: postgres2
    enviroment :
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD : postgres
      POSTGRES_DB : postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend1:
    image: backend1:1.0
    build:
      context: backend1
      dockerfile: Dockerfile
    container_name: backend1
    ports :
      - 3000 : 3000
    environment:
      DB1_HOST: db_01
      DB1_NAME: postgres
      DB1_USER: postgres
      DB1_PASSWORD: postgres
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    healthcheck:
    test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      db_01:
        condition: service_healthy
      db_02:
        condition: service_healthy

  backend2:
    image: backend2:1.0
    build:
      context: backend1
      dockerfile: Dockerfile
    container_name: backend2
    ports:
      - 3001 : 3001
    environment:
      DB2_HOST: db_02
      DB2_NAME: postgres
      DB2_USER: postgres
      DB2_PASSWORD: postgres
    healthcheck:
    test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
    interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      db_01:
        condition: service_healthy
      db_02:
        condition: service_healthy

  backend_test:
    build: ./backend-testing
    container_name: backend-test
    depends_on:

  mock_api:
    image: mock-api:latest
    container_name: mock-api
